/** The user's spaceship. */

class Spaceship {
    field int x, y;
    field int width, height;
    field Bullet shotBullet;

    function int getBulletWidth()
    {
        return 2;
    }

    function int getBulletHeight()
    {
        return 4;
    }

    method int getX()
    {
        return x;
    }

    method int getY()
    {
        return y;
    }

    method int getWidth()
    {
        return width;
    }

    method int getHeight()
    {
        return height;
    }

    method int getX2()
    {
        return x + width;
    }

    method int getY2()
    {
        return y + height;
    }

    method Bullet getShotBullet()
    {
        return shotBullet;
    }

    constructor Spaceship new(int initialX, int initialY, int shipWidth, int shipHeight)
    {
        let x = initialX;
        let y = initialY;
        let width = shipWidth;
        let height = shipHeight;
        let shotBullet = null;
        return this;
    }
    
    method void act()
    {
        do moveIfNeeded();
        do shootIfNeeded();

        return;
    }

    method void moveIfNeeded()
    {
        if (KeypressReader.leftArrPressed()) {
            if (ScreenBounds.validate_x(x - 20)) {
                let x = x - 20;
            } else {
                let x = 0;
            }
        }

        if (KeypressReader.rightArrPressed()) {
            if (ScreenBounds.validate_x(x + 20 + getWidth())) {
                let x = x + 20;
            } else {
                let x = ScreenBounds.getWidth() - getWidth() - 1;
            }
        }

        return;
    }

    method void shootIfNeeded()
    {
        var int xOrigin;

        if (KeypressReader.spacePressed()) {

            let xOrigin = Math.divide(width, 2) + x;
            let shotBullet = Bullet.new(xOrigin, y, Spaceship.getBulletWidth(), Spaceship.getBulletHeight());

        } else {
            let shotBullet = null;
        }

        return;
    }

    method void dispose() 
    {
        do Memory.deAlloc(this);
        return;
    }
}

